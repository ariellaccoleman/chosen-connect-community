
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://nvaqqkffmfuxdnwnqhxo.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im52YXFxa2ZmbWZ1eGRud25xaHhvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYyNDgxODYsImV4cCI6MjA2MTgyNDE4Nn0.rUwLwOr8QSzhJi3J2Mi_D94Zy-zLWykw7_mXY29UmP4";

// Detect if we're in a Node.js environment (including tests)
const isNodeEnvironment = typeof window === "undefined";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: !isNodeEnvironment, // Don't persist sessions in test environment
    autoRefreshToken: !isNodeEnvironment, // Don't auto-refresh in test environment
  }
});

// Add diagnostic logging for session state (only in browser)
if (!isNodeEnvironment) {
  // Log session info on load
  supabase.auth.getSession().then(({ data }) => {
    console.log("ðŸ“Š Initial Supabase session check:", {
      hasSession: !!data.session,
      hasUser: !!data.session?.user,
      email: data.session?.user?.email || "none"
    });
  });
  
  // Monitor session changes
  supabase.auth.onAuthStateChange((event, session) => {
    console.log("ðŸ“Š Supabase auth state changed:", event, {
      hasSession: !!session,
      hasUser: !!session?.user,
      email: session?.user?.email || "none"
    });
  });
} else {
  console.log("ðŸ”§ Supabase client initialized for Node.js environment");
}
